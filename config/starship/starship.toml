format = '''
[┌\(${custom.publicip}\)
├\(${custom.remoteip}${custom.cellip}${custom.wlanip}${custom.localip}${custom.lanip}\)
├\($os\)─$hostname\($time\)─\($status\)$cmd_duration
├─\[$directory\] $git_branch$git_commit$git_state$git_metrics$git_status
└](bold line)$character
'''

right_format='$package$nodejs'
add_newline = false
palette = 'global'

[palettes.global]
line = '#00bbff'
r_ip = '#77ffff'
l_ip = '#ffaaff'
fail = '#ff5555'
pass = '#55ff55'
alert = '#ffff55'
branch = '#ffffaa'

[custom.publicip]
command = "echo $(cat $HOME/.PUBLIC_IP || echo 'OFFLINE')"
when = 'true'
format = "[[󰇧 ](#00ffff)$output]($style)"
style = "r_ip"

[custom.remoteip]
command = 'echo $SSH_CONNECTION | cut -d" " -f1'
when = 'test -n "$SSH_CONNECTION"'
format = "[[󰑔 ](#bbffff)$output]($style) "
style = "r_ip"

[custom.localip]
command = '''
ifconfig 2> /dev/null | \
sed -nE 's/^(.+):\s.*/\1:/p;s/.*inet\s(.+)\s.n.*$/\1 /p' | \
sed -zE 's/\n//g;s/ /\n/g;s/.+:([a-z])/\1/g' | \
grep -m 1 -E 'lo' | \
cut -d':' -f2 \
'''
when = '''
ifconfig 2> /dev/null | \
sed -nE 's/^(.+):\s.*/\1:/p;s/.*inet\s(.+)\s.n.*$/\1 /p' | \
sed -zE 's/\n//g;s/ /\n/g;s/.+:([a-z])/\1/g' | \
grep -E 'lo:.+' \
'''
format = '[[ ](#ccffcc)$output]($style)'
style = 'l_ip'

[custom.cellip]
command = '''
ifconfig 2> /dev/null | \
sed -nE 's/^(.+):\s.*/\1:/p;s/.*inet\s(.+)\s.n.*$/\1 /p' | \
sed -zE 's/\n//g;s/ /\n/g;s/.+:([a-z])/\1/g' | \
grep -m 1 -E 'rmnet' | \
cut -d':' -f2 \
'''
when = '''
ifconfig 2> /dev/null | \
sed -nE 's/^(.+):\s.*/\1:/p;s/.*inet\s(.+)\s.n.*$/\1 /p' | \
sed -zE 's/\n//g;s/ /\n/g;s/.+:([a-z])/\1/g' | \
grep -E 'rmnet.+:.+' \
'''
format = '[[󰢾 ](#ccffcc)$output]($style) '
style = 'l_ip'

[custom.wlanip]
command = '''
ifconfig 2> /dev/null | \
sed -nE 's/^(.+):\s.*/\1:/p;s/.*inet\s(.+)\s.n.*$/\1 /p' | \
sed -zE 's/\n//g;s/ /\n/g;s/.+:([a-z])/\1/g' | \
grep -m 1 -E 'wlan' | \
cut -d':' -f2 \
'''
when = '''
ifconfig 2> /dev/null | \
sed -nE 's/^(.+):\s.*/\1:/p;s/.*inet\s(.+)\s.n.*$/\1 /p' | \
sed -zE 's/\n//g;s/ /\n/g;s/.+:([a-z])/\1/g' | \
grep -E 'wlan.+:.+' \
'''
format = '[[󰖩 ](#ccffcc)$output]($style) '
style = 'l_ip'

[custom.lanip]
command = '''
ifconfig 2> /dev/null | \
sed -nE 's/^(.+):\s.*/\1:/p;s/.*inet\s(.+)\s.n.*$/\1 /p' | \
sed -zE 's/\n//g;s/ /\n/g;s/.+:([a-z])/\1/g' | \
grep -m 1 -E 'eth|enp' | \
cut -d':' -f2 \
'''
when = '''
ifconfig 2> /dev/null | \
sed -nE 's/^(.+):\s.*/\1:/p;s/.*inet\s(.+)\s.n.*$/\1 /p' | \
sed -zE 's/\n//g;s/ /\n/g;s/.+:([a-z])/\1/g' | \
grep -E '(eth|enp).+:.+' \
'''
format = '[[󰌗 ](#ccffcc)$output]($style) '
style = 'l_ip'

[hostname]
ssh_only = true
format = '[\([$hostname]($style)\)─]($bold line)'
style = '#22ff22'

[cmd_duration]
format = '[─\([[󰔛 ](#ffffcc)$duration]($style)\)](bold line)'
style = 'bold #aaffff'

[status]
format = '[$symbol$status]($style)'
map_symbol = true
symbol = '[ ](#ee0000)'
success_symbol = '[ ](#00ee00)'
not_executable_symbol = '[󰜺 ](#aaffff)'
not_found_symbol = '[󰀪 ](alert)'
sigint_symbol = '[ ](alert)'
signal_symbol = '[ ](alert)'
success_style = 'pass'
failure_style = 'fail'
disabled = false

[git_branch]
format = '[$symbol$branch(:$remote_branch)]($style) '
always_show_remote = true
symbol = '[ ](#ffccff)'
style = 'bold branch'

[git_metrics]
format = '([󰋚 [$added]($added_style)[$deleted]($deleted_style)](#55ffff) )'
added_style = 'bold #77ff77'
deleted_style = 'bold #ff7777'
disabled = false

[git_state]
format = '\([$state( $progress_current/$progress_total)]($style)\) '
style = '#55ff55'

[git_commit]
format = '[$hash]($style) '
only_detached = false
style = '#ffaa00'

[git_status]
format = '[($all_status$ahead_behind)]($style)'
conflicted = ' $count '
ahead = '[󰆸 ](#00ff00)$count '
behind = '[󰆹 ](#ff0000)$count '
diverged = ' 󰆸 $ahead_count 󰆹 $behind_count '
up_to_date = '[󱓏 ](#ffccff)'
untracked = '[󰘥 ](#ffff00)$count '
stashed = '[󰆺 ](#ffffaa)$count '
modified = '[󰝶 ](#00ffff)$count '
staged = '[󰐙 ](#00ff00)$count '
renamed = '[󱖘 ](#ff00ff)$count '
deleted = '[󰮈 ](#ff0000)$count '
style = 'bold #ffaaaa'

[directory]
format = '[$path[$read_only]($read_only_style)]($style)'
repo_root_format = '[󰊢 ]($before_repo_root_style)[$repo_root]($repo_root_style)[$path[$read_only]($read_only_style)]($style)'
truncation_length = 3
truncation_symbol = '…/'
truncate_to_repo = true
before_repo_root_style = '#ff7700'
repo_root_style = 'bold underline #ffcc00'
read_only_style = 'bold #ff5500'
home_symbol = ' '
read_only = ' 󰦝'
style = 'bold #55ff55'

[directory.substitutions]
'/data/data/com.termux/files/usr' = '/usr'
'/usr/etc' = '/ '
'/usr/bin' = '/ '
'/usr/tmp' = '/ '
'/usr/share' = '/ '
'/usr/var/log' = '/ '
'projects/termux-projects' = ' Termux Projects'
'src/etc' = ' '
'src/tests' = '󰙨'
'src/utils' = ' '
'src/libs' = ' '
"Documents" = "󰈙 "
"Downloads" = " "
"Music" = " "
"Pictures" = " "
"projects" = ' Projects'
"www" = '󰖟 '

[character]
format = '$symbol'
success_symbol = '[](bold #11ff11)'
error_symbol = '[](bold #ff1111)'

[os]
disabled = false
style = '#ffaaaa'
format = '[$symbol]($style)'

[os.symbols]
Alpaquita = " "
Alpine = " "
AlmaLinux = " "
Amazon = " "
Android = "[ ](#00ff00)"
Arch = " "
Artix = " "
CachyOS = " "
CentOS = " "
Debian = " "
DragonFly = " "
Emscripten = " "
EndeavourOS = " "
Fedora = " "
FreeBSD = " "
Garuda = "󰛓 "
Gentoo = " "
HardenedBSD = "󰞌 "
Illumos = "󰈸 "
Kali = " "
Linux = " "
Mabox = " "
Macos = " "
Manjaro = " "
Mariner = " "
MidnightBSD = " "
Mint = " "
NetBSD = " "
NixOS = " "
Nobara = " "
OpenBSD = "󰈺 "
openSUSE = " "
OracleLinux = "󰌷 "
Pop = " "
Raspbian = " "
Redhat = " "
RedHatEnterprise = " "
RockyLinux = " "
Redox = "󰀘 "
Solus = "󰠳 "
SUSE = " "
Ubuntu = " "
Unknown = ""
Void = " "
Windows = "󰍲 "

[time]
format = '[[ ](#55ffff)$time]($style)'
time_format = '%R'
style = 'bold #88ff88'
disabled = false

[package]
format = '[$symbol($version)]($style) '
symbol = ' '

[nodejs]
format = '[$symbol($version)]($style) '
symbol = ' '
